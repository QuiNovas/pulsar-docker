#!/bin/bash

function usage(){
  cat<<EOF

    Run pulsar broker, client, or admin tool.

    Usage: pulsar <option> [option args]
    Commands:
      -broker [args] Start the pulsar broker using config file /conf/pulsar.conf
      -client [args] Start the pulsar client using config file /conf/client.conf
      -admin  [args] Start the pulsar admin client using config file /conf/client.conf
EOF
}

IPSTACK="-Djava.net.preferIPv4Stack=true"
[ ! -z "${PREFER_IPV6}" ] && IPSTACK="-Djava.net.preferIPv4Stack=false
[ -z "${MIN_HEAP}" ] && MIN_HEAP=2g
[ -z "${MAX_HEAP}" ] && MAX_HEAP=2g
[ -z "${MAX_DIRECT_MEMORY}" ] && MAX_DIRECT_MEMORY=4g
[ -z "${MEM_OPTS}" ] && MEM_OPTS="-Xms${MIN_HEAP} -Xmx${MAX_HEAP} -XX:MaxDirectMemorySize=${MAX_DIRECT_MEMORY}"
[ -z "${GC_OPTS}" ] && GC_OPTS="-XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32 -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB"
[ -z "${NETTY_OPTS}" ] && NETTY_OPTS="-Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.maxCapacity.default=1000 -Dio.netty.recycler.linkCapacity=1024"
[ -z "${MAX_BUFFER}" ] && MAX_BUFFER=10485760
CLASSPATH=$(find /pulsar/lib/ /pulsar/offloaders -name *.jar | grep -v presto | grep -v 'logging.log4j-log4j-slf4j-impl-2.10.0.jar' | tr '\n' ':' | sed 's/:$//'):/pulsar/instances/java-instance.jar:${EXTRA_CLASSPATH}

JAVA=$(which java)

CMD=$(cat<<EOF
  $(which java) \
  -Dpulsar.functions.java.instance.jar=/pulsar/instances/java-instance.jar \
  -Dpulsar.functions.python.instance.file=/pulsar/instances/python-instance/python_instance_main.py \
  -Dpulsar.functions.extra.dependencies.dir=/instances/deps \
  -Dlog4j.configurationFile=/conf/log4j.properties \
  -Djute.maxbuffer=${MAX_BUFFER} \
  -javaagent:/pulsar/lib/org.aspectj-aspectjweaver-1.9.2.jar \
  ${IPSTACK} \
  ${MEM_OPTS} \
  ${GC_OPTS} \
  ${NETTY_OPTS} \
  -cp ${CLASSPATH} \
  ${EXPTRA_OPTS}
EOF
)

function _init(){
  echo 'Running initialization.......'
  [ -z "${CLUSTER}" ] && CLUSTER=$(grep clusterName /conf/pulsar.conf | cut -d '=' -f2) # Try the config if we haven't set a variable
  [ -z "${CLUSTER}" ] && CLUSTER=pulsar # Fail safe
  [ -z "${SERVICE_URL}" ] && SERVICE_URL=localhost
  [ -z "${HTTP_PORT}" ] && HTTP_PORT=$(grep 'webServicePort=' /conf/pulsar.conf | cut -d '=' -f2)
  [ -z "${HTTP_PORT}" ] && HTTP_PORT=8080
  [ -z "${HTTPS_PORT}" ] && HTTPS_PORT=$(grep 'webServicePortTls=' /conf/pulsar.conf | cut -d '=' -f2)
  [ -z "${HTTPS_PORT}" ] && HTTPS_PORT=8443
  [ -z "${BROKER_PORT}" ] && BROKER_PORT=$(grep 'brokerServicePort=' /conf/pulsar.conf | cut -d '=' -f2)
  [ -z "${BROKER_PORT}" ] && BROKER_PORT=6650
  [ -z "${BROKER_TLS_PORT}" ] && BROKER_TLS_PORT=$(grep 'brokerServicePortTls=' /conf/pulsar.conf | cut -d '=' -f2)
  [ -z "${BROKER_TLS_PORT}" ] && BROKER_TLS_PORT=6651

  OPTS=$(cat<<EOF
    --cluster ${CLUSTER} \
    --zookeeper $(grep zookeeperServers /conf/pulsar.conf | grep -v '#' | cut -d'=' -f2) \
    --configuration-store $(grep configurationStore /conf/pulsar.conf | grep -v '#'| cut -d'=' -f2 | cut -d',' -f1) \
    --web-service-url http://${SERVICE_URL}:${HTTP_PORT} \
    --web-service-url-tls https://${SERVICE_URL}:${HTTPS_PORT} \
    --broker-service-url pulsar://${SERVICE_URL}:${BROKER_PORT} \
    --broker-service-url-tls pulsar+ssl://${SERVICE_URL}:${BROKER_TLS_PORT} 2>&1
EOF
    )

  OUTPUT=$(${CMD} org.apache.pulsar.PulsarClusterMetadataSetup \
    ${OPTS}
  )

  if echo "${OUTPUT}" | grep 'NodeExists for /'; then
    echo 'Cluster was already initialized......'
    return
  elif [[ "$?" -ne 0 ]]; then
    echo "Cluster initialization failed: "
    echo "${OUTPUT}"
    exit 1
  else
    echo "Cluster initialized: "
    echo "${OUTPUT}"
    return
  fi
}

case $1 in
  -broker)
    shift
    _init
    ${CMD} org.apache.pulsar.PulsarBrokerStarter --broker-conf /conf/pulsar.conf "$@"
    ;;
  -client)
    shift
    ${CMD} org.apache.pulsar.client.cli.PulsarClientTool /conf/client.conf "$@"
    ;;
  -admin)
    shift
    ${CMD} org.apache.pulsar.admin.cli.PulsarAdminTool /conf/client.conf "$@"
    ;;
  *)
    usage
    exit 0
esac
